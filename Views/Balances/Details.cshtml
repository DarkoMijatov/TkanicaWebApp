@model TkanicaWebApp.Models.Balance

@{
    ViewData["Title"] = "Podaci o računu";
    int transactionsCount = Model.Transactions.Count;
    string isCash = Model.IsCash ? "da" : "ne";
    decimal balanceAmount = Model.Transactions.Where(x => x.Paid).Sum(x => x.Amount * x.TransactionType.Direction);
}

<h1>Podaci o računu</h1>

<div>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            Naziv
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            Broj računa
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AccountNumber.BankAccountNumber)
        </dd>
        <dt class = "col-sm-2">
            Keš
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => isCash)
        </dd>
        <dt class="col-sm-2">
            Broj transakcija
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => transactionsCount)
        </dd>
        <dt class="col-sm-2">
            Trenutno stanje
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => balanceAmount)
        </dd>
        <dt class = "col-sm-2">
           Dolazne transakcije:
        </dt>
        <dd class = "col-sm-10">
            <ul>
                @foreach(var transaction in Model.Transactions.Where(x => x.TransactionType.Direction == 1))
                {
                    string debtor = transaction.MemberId.HasValue ?
                        transaction.Member.FullName : transaction.DebtorId.HasValue ?
                        transaction.Debtor.Name : @"KUD ""Pargar""";
                    string transactionText = (transaction.TransactionNumber != "" ? transaction.TransactionNumber : transaction.Amount.ToString()) + (!transaction.Paid ? " (neplaćena)" : "") + " (" + transaction.TransactionType.Name + ")" + (transaction.TransactionTypeId == 1 ? $" ({transaction.Description})" : "") + $" ({debtor})";
                    <li>
                        <a asp-controller="Transactions" asp-action="Details" asp-route-id="@transaction.Id">@Html.DisplayFor(x => transactionText)</a>
                    </li>
                }
            </ul>
        </dd>
        <dt class = "col-sm-2">
           Odlazne transakcije:
        </dt>
        <dd class = "col-sm-10">
            <ul>
                @foreach(var transaction in Model.Transactions.Where(x => x.TransactionType.Direction == -1))
                {
                    string creditor = transaction.EmployeeId.HasValue ?
                        transaction.Employee.FullName : transaction.CreditorId.HasValue ?
                        transaction.Creditor.Name : @"KUD ""Pargar""";
                    string transactionText = (transaction.TransactionNumber != "" ? transaction.TransactionNumber : transaction.Amount.ToString()) + (!transaction.Paid ? " (neplaćena)" : "") + " (" + transaction.TransactionType.Name + ")" + (transaction.TransactionTypeId == 1 || transaction.TransactionTypeId == 2 ? $" ({transaction.Description})" : "") + $" ({creditor})";
                    <li>
                        <a asp-controller="Transactions" asp-action="Details" asp-route-id="@transaction.Id">@Html.DisplayFor(x => transactionText)</a>
                    </li>
                }
            </ul>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Povratak na listu</a>
</div>
